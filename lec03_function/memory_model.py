"""
파이썬 메모리 모델 - 파이썬이 변수들의 메모리 공간을 관리하는 방법.
"""
n1 = 1
print(f'주소 : {id(n1)}, 저장된 값 : {n1}') # 주소 : 140719357063440, 저장된 값 : 1

n2 = n1
print(f'주소 = {id(n2)}, 저장된 값 = {n2}') # 주소 = 140719357063440, 저장된 값 = 1

n2 = 2
print(f'주소 = {id(n2)}, 저장된 값 = {n2}') # 주소 = 140719357063472, 저장된 값 = 2

n3 = 1
print(f'주소 = {id(n3)}, 저장된 값 = {n3}') # 주소 = 140719357063440, 저장된 값 = 1

n3 = 3 - 1
print(f'주소 = {id(n3)}, 저장된 값 = {n3}') # 주소 = 140719357063472, 저장된 값 = 2

s1 = 'abc'
s2 = 'abc'
print(f'주소 = {id(s1)}, 저장된 값 = {s1}') # 주소 = 2376176854256, 저장된 값 = abc
print(f'주소 = {id(s2)}, 저장된 값 = {s2}') # 주소 = 2376176854256, 저장된 값 = abc

# 저장된 값이 같은 것들은 주소가 서로 같음. =>  숫자 / 문자열인 경우, 생성된 객체를 캐싱(재활용)
# 숫자 / 문자열이 아닌 객체는, 값이 같아도 주소가 다름.(캐싱 X. 주소가 새롭게 생성됨)

list1 = [1, 2, 3]
list2 = [1, 2, 3]
print(f'주소 = {id(list1)}, 저장된 값 = {list1}') # 주소 = 2290452484680, 저장된 값 = [1, 2, 3]
print(f'주소 = {id(list2)}, 저장된 값 = {list2}') # 주소 = 2290452485192, 저장된 값 = [1, 2, 3]

list3 = list2
print(f'주소 = {id(list3)}, 저장된 값 = {list3}') # list2를 참조 했기 때문에 list2와 list3의 주소는 같음.

list2[0] = 100
print(list2, list3) # [100, 2, 3] [100, 2, 3]
# list2를 변경했더니, list3까지도 같이 변경되었다. ~~~> list2와 list3의 주소가 서로 같기 때문.

list3[1] = 200
print(list2, list3) # [100, 200, 3] [100, 200, 3]
# 마찬가지로, list3을 변경하면 list2도 같이 변경된다.

# 정리하자면 list1과 list2는 다른 객체(주소가 다름), list2와 list3은 같은 객체.(주소가 같음)


# '==' 연산자 VS 'is' 연산자
a = [1, 2, 3]
b = [1, 2, 3]
print(f'== : {a == b}, is : {a is b}') # == : True, is : False
# '==' ~~~~~> 서로 '값'이 같은가? / 'is' ~~~~~> 서로 '주소'가 같은가?


